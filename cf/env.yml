
AWSTemplateFormatVersion: '2010-09-09'

Description: "Static stack for the ODOS code challenge. Contains resources that need initialized once, i.e. resources that are used across environments. This static will provision: a CodeStar connection to Github, ECRs for application images, IAM roles for various AWS services ."

Parameters:
  applicationName:
    Type: String
    Description: Label appended to stack resources
    Default: innolab
  environmentName:
    Type: String
    Description: Environment into which the stack is deploying
    Default: Dev
  staticStack:
    Type: String
    Description: Cross stack reference to resources contained in the static stack.
    Default: Innolab-StaticStack

Mappings:
  # used to map branch names to lower case and subdomain suffixes.
  BranchMap:
    Dev: 
      branch:  "dev"
      subdomin: "-dev"
    Test: 
      branch: "test"
      subdomain: "-test"
    Staging: 
      branch: "staging"
      subdomain: "-staging"
    Prod: 
      branch: "prod"
      subdomain: ""

Resources:
  PipelineArtifacts:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub 
        - "${app}-${env}-pipeline-artifacts"
        - app: !Ref applicationName
          env: 
            Fn::FindInMap:
              - BranchMap
              - !Ref environmentName
              - branch
      VersioningConfiguration:
        Status: Enabled

  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${applicationName}-${environmentName}-codebuild"
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole:
        Fn::ImportValue: !Sub "${staticStack}-CodeBuildRoleArn"
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:4.0
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
      Cache:
        Type: LOCAL
        Modes: # You can specify one or more cache mode, 
          - LOCAL_CUSTOM_CACHE
          - LOCAL_DOCKER_LAYER_CACHE
          - LOCAL_SOURCE_CACHE

  FrontendBuildPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${applicationName}-${environmentName}-frontend-build-pipeline"
      RoleArn:
        Fn::ImportValue: !Sub "${staticStack}-CodePipelineRoleArn"
      ArtifactStore: 
        Type: S3 
        Location: !Ref PipelineArtifacts
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: !Sub "${applicationName}-${environmentName}-frontend-source"    
              Configuration:
                ConnectionArn:
                  Fn::ImportValue: !Sub ${staticStack}-GitHubConnectionARN
                # THIS NEEDS UPDATED TO POINT TO THE CORRECT REPO
                FullRepositoryId: makpar-innovation-lab/react-template
                BranchName: !Ref environmentName
                OutputArtifactFormat: CODEBUILD_CLONE_REF
                DetectChanges: true
        - Name: Build   
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: !Sub "${applicationName}-${environmentName}-frontend-source"
              OutputArtifacts:
                - Name: !Sub "${applicationName}-${environmentName}-frontend-build"
              Configuration: 
                ProjectName: !Ref CodeBuild
                EnvironmentVariables: !Sub 
                  - '[{"name":"BRANCH","value":"${env}","type":"PLAINTEXT"},{"name":"APPLICATION","value":"${app}","type":"PLAINTEXT"},{"name":"SONAR_URL","value":"${app}-sonarURL", "type":"SECRETS_MANAGER"}, {"name":"SONAR_TOKEN","value":"${app}-sonarToken","type":"SECRETS_MANAGER"},{"name": "DOMAIN", "value": "${domainName}", "type": "PLAINTEXT"}, {"name":"COVERAGE_DISTRIBUTION_ID", "value": "${covDistro}", "type": "PLAINTEXT"},{"name":"AWS_DEFAULT_REGION","value":"${AWS::Region}","type":"PLAINTEXT" }, { "name": "AWS_ACCOUNT_ID", "value": "${AWS::AccountId}", "type": "PLAINTEXT"}]'
                  - env: 
                      Fn::FindInMap:
                        - BranchMap
                        - !Ref environmentName
                        - branch
                    app: !Ref applicationName
                    covDistro:
                      Fn::ImportValue: !Sub ${staticStack}-CoverageBucketDistributionID
    DependsOn:
      - CodeBuild

  BackendBuildPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${applicationName}-${environmentName}-backend-build-pipeline"
      RoleArn:
        Fn::ImportValue: !Sub "${staticStack}-CodePipelineRoleArn"
      ArtifactStore: 
        Type: S3 
        Location: !Ref PipelineArtifacts
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: !Sub "${applicationName}-${environmentName}-backend-source"    
              Configuration:
                ConnectionArn:
                  Fn::ImportValue: !Sub ${staticStack}-GitHubConnectionARN
                # THIS NEEDS UPDATED TO POINT TO THE CORRECT REPO
                FullRepositoryId: makpar-innovation-lab/spring-template
                BranchName: !Ref environmentName
                OutputArtifactFormat: CODEBUILD_CLONE_REF
                DetectChanges: true
        - Name: Build   
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: !Sub "${applicationName}-${environmentName}-backend-source"
              OutputArtifacts:
                - Name: !Sub "${applicationName}-${environmentName}-backend-dev-build"
              Configuration: 
                ProjectName: !Ref CodeBuild
                EnvironmentVariables: !Sub 
                  - '[{"name":"BRANCH","value":"${env}","type":"PLAINTEXT"},{"name":"APPLICATION","value":"${app}","type":"PLAINTEXT"},{"name":"AWS_DEFAULT_REGION","value":"${AWS::Region}","type":"PLAINTEXT" }, { "name": "AWS_ACCOUNT_ID", "value": "${AWS::AccountId}", "type": "PLAINTEXT"},{"name": "DOMAIN", "value": "${domainName}", "type": "PLAINTEXT"},{"name":"COVERAGE_DISTRIBUTION_ID", "value": "${covDistro}", "type": "PLAINTEXT"}]'
                  - env: 
                      Fn::FindInMap:
                        - BranchMap
                        - !Ref environmentName
                        - branch
                    app: !Ref applicationName
                    covDistro:
                      Fn::ImportValue: !Sub ${staticStack}-CoverageBucketDistributionID
    DependsOn:
      - CodeBuild
